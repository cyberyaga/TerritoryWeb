@page "/Territory/Create"
@using Microsoft.Extensions.Logging
@inject ILogger<Create> Logger
@inject HttpClient Http
@using System.Net.Http.Json
@inject NavigationManager NavigationManager
@using TerritoryWeb.Shared.Territory

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item">Home</li>
        <li class="breadcrumb-item">Territory</li>
        <li class="breadcrumb-item active">Create Territory</li>
    </ol>
</nav>
<h2>Create</h2>
<EditForm Model="@terr" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="row">
        <div class="col">
            <h4>Territory</h4>
            <hr />
            <div class="form-group">
                <label>
                    Territory Name:
                    <InputText @bind-Value="terr.TerritoryName" class="form-control" />
                </label>
            </div>
            <div class="form-group">
                <label>
                    City:
                    <InputText @bind-Value="terr.City" class="form-control" />
                </label>
            </div>
            <div class="form-group">
                <label>
                    Type:
                    <InputRadioGroup @bind-Value="terr.TerritoryTypeId">
                        <InputRadio Value="1" />Door to Door <br />
                        <InputRadio Value="2" />Telephone
                    </InputRadioGroup>
                </label>
            </div>
            <div class="form-group">
                <label>
                    Notes:
                    <InputText @bind-Value="terr.Notes" class="form-control" />
                </label>
            </div>
            <div class="form-group">
                <label for="">
                    <button type="submit" class="form-control">Submit</button>
                </label>
            </div>
        </div>
        <div class="col">Map</div>
    </div>
</EditForm>


@code {
    private NewTerritoryBase terr = new NewTerritoryBase();

    private async Task HandleValidSubmit()
    {
        Logger.LogInformation("HandleValidSubmit called");

        var response = await Http.PostAsJsonAsync<NewTerritoryBase>("Territory", terr);

        if (response.StatusCode == System.Net.HttpStatusCode.OK)
        {
            NavigationManager.NavigateTo("/Territory");
        }

    }
}