@page "/Territory"
@using TerritoryWeb.Shared.Territory
@inject Toolbelt.Blazor.I18nText.I18nText I18nText
@inject HttpClient Http

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><NavLink href="/">@B.Home</NavLink></li>
        <li class="breadcrumb-item active">@B.Territory</li>
    </ol>
</nav>
<NavLink href="/Territory/Create" class="btn btn-outline-secondary"><i class="fa fa-plus-square" aria-hidden="true"></i> @L.CreateTerritory</NavLink>
<Dimmer Active="territories == null">
    <Table Item="TerritoryIndexView" Items="territories" Hover Selectable Responsive>
        <HeaderTemplate>
            <h2>@L.PageTitle</h2>
        </HeaderTemplate>
        <ChildContent>
            <Column Item="TerritoryIndexView" CssClass="fs-6" Property="e=>e.TerritoryName" title="@L.THTerritoryName" />
            <Column Item="TerritoryIndexView" CssClass="fs-6" Property="e=>e.DoorCount" title="@L.THDoors" />
            <Column Item="TerritoryIndexView" CssClass="fs-6" Property="e=>e.City" title="@L.THCity" />
            <Column Item="TerritoryIndexView" CssClass="fs-6" Property="e=>e.TerritoryType" title="@L.THType" />
        </ChildContent>
    </Table>
</Dimmer>


@* @if (territories == null)
{
    <p><em>@C.Loading...</em></p>
}
else
{
    <table class="table table-striped table-hover table-condensed">
        <thead>
            <tr>
                <th>@L.THTerritoryName</th>
                <th>@L.THDoors</th>
                <th>@L.THCity</th>
                <th>@L.THType</th>
                <th>@L.THAssignedPublisher</th>
                <th>@L.THCheckedOut</th>
                <th>@L.THCheckedIn</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var t in territories)
            {
                <tr>
                    <td><NavLink class="nav-link" href="@t.TerritoryUrl">@t.TerritoryName</NavLink></td>
                    <td>
                        <NavLink class="nav-link" href="@t.DoorsUrl">@t.DoorCount</NavLink>
                    </td>
                    <td>@t.City</td>
                    <td>@t.TerritoryType</td>
                    <td></td>
                    <td></td>
                    <td></td>
                </tr>
            }
        </tbody>
    </table>
} *@


@code {
    private TerritoryIndexView[]? territories;
    
    //Language
    I18nText.Territory.Index L = new I18nText.Territory.Index();
    I18nText.Shared.Breadcrum B = new I18nText.Shared.Breadcrum();
    I18nText.Shared.Common C = new I18nText.Shared.Common();

    protected override async Task OnInitializedAsync()
    {
        //Load Localization
        L = await I18nText.GetTextTableAsync<I18nText.Territory.Index>(this);
        B = await I18nText.GetTextTableAsync<I18nText.Shared.Breadcrum>(this);
        C = await I18nText.GetTextTableAsync<I18nText.Shared.Common>(this);

        territories = await Http.GetFromJsonAsync<TerritoryIndexView[]>("Territory/GetTerritories");

    }

}