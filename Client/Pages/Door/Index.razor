@page "/Door/{TerritoryId:int}"
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using TerritoryWeb.Shared.Door
@inject HttpClient Http

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><NavLink href="/">Home</NavLink></li>
        <li class="breadcrumb-item"><NavLink href="/Territory">Territory</NavLink></li>
        <li class="breadcrumb-item active">Territory Doors</li>
    </ol>
</nav>
<h2>Doors</h2>

@if (doors == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table table-striped table-hover table-condensed">
        <thead>
            <tr>
                <th>Address</th>
                <th>Street</th>
                <th>Apartment</th>
                <th>Comments</th>
                <th>Name</th>
                <th>Telephone</th>
                <th>Language</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var d in doors)
            {
                <tr>
                    <td>@d.Address</td>
                    <td>@d.Street</td>
                    <td>@d.Apartment</td>
                    <td>@d.Comments</td>
                    <td>@d.Name</td>
                    <td>@d.Telephone</td>
                    <td>@d.Language</td>
                </tr>            
            }
        </tbody>
    </table>
}

@code {
    [Parameter]
    public int TerritoryId { get; set; }
    private DoorIndexView[]? doors;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            doors = await Http.GetFromJsonAsync<DoorIndexView[]?>("Door");
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
    }

}